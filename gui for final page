# Define some colors
WHITE = (255, 255, 255)
BLACK = (0, 0, 0)
BLUE = (106, 159, 181)
LIGHT_BLUE = (187, 222, 228)
GRAY = (200, 200, 200)

# Set up fonts
medium_font = pygame.font.SysFont('arial', 36)
font = pygame.font.SysFont('arial', 25)
small_font = pygame.font.SysFont('arial', 15)
large_font = pygame.font.SysFont('arial', 45)

# Draw background
screen.fill(WHITE)

# Draw score and button labels
txt = medium_font.render(f'Number of questions answered correctly: {sum(Score)}', True, BLACK)
txt_rect = txt.get_rect(center=(216, 83))
screen.blit(txt, txt_rect)
txt = small_font.render(f'Number of questions answered incorrectly: {incorrect}', True, BLACK)
txt_rect = txt.get_rect(center=(216, 118))
screen.blit(txt, txt_rect)
txt = font.render('Press SPACE to try again!!', True, BLACK)
txt_rect = txt.get_rect(center=(216, 154))
screen.blit(txt, txt_rect)
txt = font.render('Press ENTER to see history of players', True, BLACK)
txt_rect = txt.get_rect(center=(216, 220))
screen.blit(txt, txt_rect)

# Draw video explanation links, if any
if incorrect > 0:
    txt = font.render("Click the links below to watch video explanations:", True, BLACK)
    txt_rect = txt.get_rect(center=(216, 300))
    screen.blit(txt, txt_rect)
    y = 320
    for link in youtube_links:
        txt = small_font.render(link, True, BLUE)
        txt_rect = txt.get_rect(center=(216, y))
        screen.blit(txt, txt_rect)
        y += 30

# Draw prompt for email address input
prompt_text = small_font.render("Enter your email address to receive video explanations:", True, BLACK)
prompt_rect = prompt_text.get_rect(center=(216, 480))
screen.blit(prompt_text, prompt_rect)

# Draw email address input box
input_box_rect = pygame.Rect(100, 500, 232, 50)
pygame.draw.rect(screen, BLACK, input_box_rect, 2)
input_text = medium_font.render(email_address, True, BLACK)
input_rect = input_text.get_rect(center=input_box_rect.center)
screen.blit(input_text, input_rect)

# Draw send button
send_rect = pygame.Rect(100, 570, 232, 50)
pygame.draw.rect(screen, BLUE, send_rect)
txt = medium_font.render("Send video links to email", True, WHITE)
txt_rect = txt.get_rect(center=send_rect.center)
screen.blit(txt, txt_rect)

# Update display
pygame.display.update()





















# Define font sizes
large_font = pygame.font.SysFont('arial', 60)
medium_font = pygame.font.SysFont('arial', 36)
small_font = pygame.font.SysFont('arial', 18)

# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
BLUE = (31, 118, 191)

# Draw background and border
screen.fill(WHITE)
pygame.draw.rect(screen, BLUE, (50, 50, 400, 500), 6)

# Draw title
title_text = large_font.render("Quiz Results", True, BLACK)
title_rect = title_text.get_rect(center=(250, 100))
screen.blit(title_text, title_rect)

# Draw correct and incorrect counts
correct_text = small_font.render(f"Number of questions answered correctly: {sum(Score)}", True, BLACK)
correct_rect = correct_text.get_rect(center=(250, 200))
screen.blit(correct_text, correct_rect)

incorrect_text = small_font.render(f"Number of questions answered incorrectly: {incorrect}", True, BLACK)
incorrect_rect = incorrect_text.get_rect(center=(250, 250))
screen.blit(incorrect_text, incorrect_rect)

# Draw "try again" and "see history" prompts
try_again_text = medium_font.render("Press SPACE to try again", True, BLACK)
try_again_rect = try_again_text.get_rect(center=(250, 350))
screen.blit(try_again_text, try_again_rect)

history_text = medium_font.render("Press ENTER to see history of players", True, BLACK)
history_rect = history_text.get_rect(center=(250, 400))
screen.blit(history_text, history_rect)

# Draw explanation links
if incorrect > 0:
    link_text = medium_font.render("Click the links below to watch video explanations:", True, BLACK)
    link_rect = link_text.get_rect(center=(250, 500))
    screen.blit(link_text, link_rect)

    y = 550
    for link in youtube_links:
        link_text = small_font.render(link, True, BLUE)
        link_rect = link_text.get_rect(center=(250, y))
        screen.blit(link_text, link_rect)
        y += 40

# Draw email prompt and input box
prompt_text = small_font.render("Enter your email address to receive video explanations:", True, BLACK)
prompt_rect = prompt_text.get_rect(center=(250, 650))
screen.blit(prompt_text, prompt_rect)

input_box_rect = pygame.Rect(100, 700, 300, 40)
pygame.draw.rect(screen, BLUE, input_box_rect, 2)
input_text = small_font.render(email_address, True, BLACK)
input_rect = input_text.get_rect(center=input_box_rect.center)
screen.blit(input_text, input_rect)

# Draw send button
send_rect = pygame.Rect(150, 800, 200, 50)
pygame.draw.rect(screen, BLUE, send_rect)
send_text = small_font.render("Send Links to Email", True, BLACK)
send_rect = send_text.get_rect(center=send_rect.center)
screen.blit(send_text, send_rect)

# Update display
pygame.display.update()





# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
BLUE = (0, 100, 200)
LIGHT_BLUE = (200, 220, 255)

# Create fonts
medium_font = pygame.font.SysFont('arial', 36)
font = pygame.font.SysFont('arial', 25)
small_font = pygame.font.SysFont('arial', 15)
large_font = pygame.font.SysFont('arial', 45)

# Fill background with a gradient
background = pygame.Surface((432, 650))
gradient = pygame.Surface((432, 650))
for x in range(432):
    color = tuple(int(c * (1 - x / 432)) for c in LIGHT_BLUE)
    gradient.fill(color, (x, 0, 1, 650))
background.blit(gradient, (0, 0))

# Draw title and subtitle
title_text = large_font.render("Math Quiz Results", True, BLACK)
title_rect = title_text.get_rect(center=(216, 80))
background.blit(title_text, title_rect)
subtitle_text = font.render("Congratulations on completing the quiz!", True, BLACK)
subtitle_rect = subtitle_text.get_rect(center=(216, 130))
background.blit(subtitle_text, subtitle_rect)

# Draw score and history text
score_text = small_font.render(f"Number of questions answered correctly: {sum(Score)}", True, BLACK)
score_rect = score_text.get_rect(center=(216, 200))
background.blit(score_text, score_rect)
history_text = small_font.render("Press Enter to see history of players", True, BLACK)
history_rect = history_text.get_rect(center=(216, 240))
background.blit(history_text, history_rect)

# Draw links and email text
if incorrect > 0:
    links_text = font.render("Video explanations for incorrect answers:", True, BLACK)
    links_rect = links_text.get_rect(center=(216, 340))
    background.blit(links_text, links_rect)
    y = 380
    for link in youtube_links:
        link_text = small_font.render(link, True, BLUE)
        link_rect = link_text.get_rect(center=(216, y))
        background.blit(link_text, link_rect)
        y += 30

prompt_text = small_font.render("Enter your email address to receive the links:", True, BLACK)
prompt_rect = prompt_text.get_rect(center=(216, 500))
background.blit(prompt_text, prompt_rect)

# Create input box
input_box_rect = pygame.Rect(100, 550, 232, 50)
pygame.draw.rect(background, BLUE, input_box_rect)
input_text = medium_font.render(email_address, True, WHITE)
input_rect = input_text.get_rect(center=input_box_rect.center)
background.blit(input_text, input_rect)

# Create send button
send_rect = pygame.Rect(100, 610, 232, 50)
pygame.draw.rect(background, BLUE, send_rect)
send_text = small_font.render("Send links to email", True, WHITE)
send_rect_text = send_text.get_rect(center=send_rect.center)
background.blit(send_text, send_rect_text)

# Add background to screen and update display
screen.blit(background, (0, 0))
pygame.display.update()








# load background image
background_image = pygame.image.load('background.jpg').convert()
background_image = pygame.transform.scale(background_image, (432, 650))
screen.blit(background_image, (0, 0))

# Section 1: Scores and Results
score_icon = pygame.image.load('score.png').convert_alpha()
screen.blit(score_icon, (30, 80))
txt = small_font.render(f'Number of questions answered correctly: {sum(Score)}', True, BLACK)
txt_rect = txt.get_rect(center=(216, 100))
screen.blit(txt, txt_rect)

incorrect_icon = pygame.image.load('incorrect.png').convert_alpha()
screen.blit(incorrect_icon, (30, 135))
txt = small_font.render(f'Number of questions answered incorrectly: {incorrect}', True, BLACK)
txt_rect = txt.get_rect(center=(216, 155))
screen.blit(txt, txt_rect)

txt = font.render('Press space to try again!!', True, BLACK)
txt_rect = txt.get_rect(center=(216, 200))
screen.blit(txt, txt_rect)

txt = font.render('Press Enter to see history of players', True, BLACK)
txt_rect = txt.get_rect(center=(216, 230))
screen.blit(txt, txt_rect)

# Section 2: Video Explanations
if incorrect > 0:
    video_icon = pygame.image.load('video.png').convert_alpha()
    screen.blit(video_icon, (30, 300))
    txt = font.render("Video Explanations:", True, BLACK)
    txt_rect = txt.get_rect(center=(216, 320))
    screen.blit(txt, txt_rect)

    y = 340
    for link in youtube_links:
        txt = small_font.render(link, True, BLACK)
        txt_rect = txt.get_rect(center=(216, y))
        screen.blit(txt, txt_rect)
        y += 30

# Section 3: Send Links to Email
prompt_text = small_font.render("Send the video explanations to your email address:", True, BLACK)
prompt_rect = prompt_text.get_rect(center=(216, 480))
screen.blit(prompt_text, prompt_rect)

input_box_rect = pygame.Rect(100, 510, 232, 50)
pygame.draw.rect(screen, LIGHT_BLUE, input_box_rect)
pygame.draw.rect(screen, BLACK, input_box_rect, 2)
input_text = medium_font.render(email_address, True, BLACK)
input_rect = input_text.get_rect(center=input_box_rect.center)
screen.blit(input_text, input_rect)

send_icon = pygame.image.load('send.png').convert_alpha()
send_rect = send_icon.get_rect(center=(216, 580))
screen.blit(send_icon, send_rect)
txt = small_font.render("Send links to email", True, BLACK)
txt_rect = txt.get_rect(center=(270, 580))
screen.blit(txt, txt_rect)












    if phase=='login':
                if active==0:
                    if i.key==pygame.K_BACKSPACE:
                        username=username[:-1]
                    else:
                        username+=i.unicode
                if active==1:
                    if i.key==pygame.K_BACKSPACE:
                        password=password[:-1]
                    else:
                        if not i.unicode==r'\r':
                            password+=i.unicode
                if i.key==pygame.K_RETURN and phase=='login':
                    if active==0:
                        username=username[:-1]
                    else:
                        password=password[:-1]
                    entered=True
                    save_credentials(username)
    # pygame.draw.line(screen,(0,0,0),(200,150),(200,750),




    screen.fill((108, 207, 246))
    for i in pygame.event.get():
        if i.type==256:
            pygame.quit()
        if i.type==pygame.KEYDOWN:
            if i.key==pygame.K_SPACE and phase=="end_game":
                Score=[0,0,0]
                difficulty=1
                board=[None]*9
                phase="question"
                wait=False,False
                get_question=True
                incorrect=0
                empty=[i for i in range(9)]
                questions() 









                 Score=[0,0,0]
                       difficulty=1
                       board=[None]*9
                       phase="question"
                       wait=False,False
                       get_question=True
                       incorrect=0
                       empty=[i for i in range(9)]







































